<%
  // bg-indigo-50

  const generateEntry = function(idx) {
    const string = (Math.random() + 1).toString(36).substring(2);
    return {
      id: idx,
      string,
      metadata: {
        start: Math.floor(Math.random() * 50),
        end: Math.floor(Math.random() * 50) + 50,
      },
    }
  }

  let data = [];
  for (let i = 0; i < 100; i += 1) {
    const entry = generateEntry(i);
    data.push(entry);
  }
%>

<div
  v-component
  #data="<%= JSON.stringify(data) %>"
  #selected-data="[]"
  #query="null"
  #focused="false"
  #selection-idx="0"
  @on-max-selection-idx-changed="selectionIdx > maxSelectionIdx ?? selectionIdx = maxSelectionIdx"
  @on-total-results-changed="hasQuery ?? $log(`Query: ${query} ‚Äî Total results: ${totalResults}`)"
  üñ•Ô∏è:has-query="query && query?.trim().length > 0"
  üñ•Ô∏è:has-results="results != null"
  üñ•Ô∏è:is-results-empty="hasResults && results.length <= 0"
  üñ•Ô∏è:searching="focused && hasQuery && !hasResults"
  üñ•Ô∏è:results="hasQuery ?? data.filter((d) => d.string.includes(query))"
  üñ•Ô∏è:display-results="results?.slice(0, 4)"
  üñ•Ô∏è:max-selection-idx="Math.max(0, hasResults ? displayResults.length - 1 : 0)"
  üñ•Ô∏è:selection="hasResults ?? displayResults[selectionIdx]"
  üñ•Ô∏è:selected-ids="selectedData.map((s) => s.id)"
  üñ•Ô∏è:total-results="hasResults ? results.length : 0"
  ‚ú®:select="selection != null && !selectedData.includes(selection) ?? confirmSelection"
  ‚ú®:confirm-selection="selectedData.push(displayResults[selectionIdx]); query = null; selectionIdx = 0"
  ‚ú®:remove-selected="selectedData = selectedData.filter((s) => s.id !== $args[0])"
  ‚ú®:reset="query = null; focused = false; selectionIdx = 0;"
  class="relative"
>
  <input
    type="text"
    placeholder="Search records..."
    v-ref="input"
    v-sync="query"
    @focus="focused = true"
    @blur.delay="reset"
    @keydown.up.prevent="selectionIdx > 0 ?? selectionIdx -= 1"
    @keydown.down.prevent="selectionIdx < maxSelectionIdx ?? selectionIdx += 1"
    @keydown.ent="select"
    @keydown.esc="$refs.input.blur"
    class="w-full"
  />

  <ul class="mt-6 space-y-2 list-disc">
    <li
      v-for="datum of selectedData"
      :key="id"
      ü§ù:remove="removeSelected"
      class="flex items-center justify-between list-disc"
    >
      <p>
        <span class="text-lg font-bold mr-4">-</span>
        <span :text="string: ${datum.string}"></span>
      </p>
      <button
        @click="$emit('remove', datum.id)"
        class="button compact"
      >X</button>
    </li>
  </ul>

  <div
    v-if="focused"
    class="absolute bg-white top-0 left-0 right-0 mt-11 rounded z-10 border-2 shadow-xl text-sm"
  >
    <p
      v-if="!hasResults || isResultsEmpty"
      :text="isResultsEmpty ? 'No results found' : (searching ? 'Searching records...' : 'Start typing to search...')"
      class="text-gray-600 italic p-3"
    ></p>

    <div v-else>
      <p
        v-for="(result, idx) of displayResults"
        :key="id"
        üéÅ:selection-idx
        üéÅ:selected-ids
        ü§ù:select
        üñ•Ô∏è:is-selection="selectionIdx === idx"
        üñ•Ô∏è:is-selected="selectedIds.includes(result.id)"
        @mouseover="selectionIdx = idx"
        @mousedown="$emit('select')"
        :text="result.string"
        üé®:bg-indigo-50="isSelection"
        üé®:font-semibold="isSelected"
        class="px-3 py-2 cursor-pointer"
      ></p>
    </div>
  </div>
</div>